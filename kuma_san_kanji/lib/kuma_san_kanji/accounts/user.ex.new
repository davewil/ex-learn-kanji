defmodule KumaSanKanji.Accounts.User do
  use Ash.Resource,
    domain: KumaSanKanji.Domain,
    data_layer: AshSqlite.DataLayer

  attributes do
    uuid_primary_key :id
    attribute :email, :ci_string, allow_nil?: false
    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true
    attribute :username, :string, allow_nil?: false
    attribute :joined_at, :utc_datetime, default: &DateTime.utc_now/0
  end

  actions do
    defaults [:create, :read, :update, :destroy]

    create :sign_up do
      accept [:email, :username]
      argument :password, :string, allow_nil?: false, sensitive?: true

      change &__MODULE__.validate_password_length/2
      change &__MODULE__.hash_password/2
    end

    read :login do
      argument :email, :ci_string, allow_nil?: false
      argument :password, :string, allow_nil?: false, sensitive?: true

      # Use a simple filter on email
      filter expr(email == ^arg(:email))

      # Load the hashed_password field for password verification in Auth module
      prepare fn query, _ ->
        Ash.Query.load(query, :hashed_password)
      end
    end
  end

  code_interface do
    define :get_by_email, args: [:email], action: :read
    define :sign_up, args: [:email, :username, :password], action: :sign_up
    define :login, args: [:email, :password], action: :login
  end

  # Custom validation function for password length
  def validate_password_length(changeset, _context) do
    if !is_nil(Ash.Changeset.get_argument(changeset, :password)) &&
       String.length(Ash.Changeset.get_argument(changeset, :password)) < 8 do
      Ash.Changeset.add_error(changeset, field: :password, message: "password must be at least 8 characters")
    else
      changeset
    end
  end

  # Custom function to hash password during sign up
  def hash_password(changeset, _context) do
    password = Ash.Changeset.get_argument(changeset, :password)
    if is_nil(password) do
      changeset
    else
      hashed_password = Pbkdf2.hash_pwd_salt(password)
      Ash.Changeset.force_change_attribute(changeset, :hashed_password, hashed_password)
    end
  end

  identities do
    identity :unique_email, [:email]
  end

  sqlite do
    table "users"
    repo KumaSanKanji.Repo
  end
end
